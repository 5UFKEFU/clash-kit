// Code generated by gobind. DO NOT EDIT.

// Package main is an autogenerated binder stub for package clash.
//
//	autogenerated by gobind -lang=go ClashKit/clash
package main

/*
#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "clash.h"

*/
import "C"

import (
	"ClashKit/clash"
	_seq "golang.org/x/mobile/bind/seq"
)

// suppress the error if seq ends up unused
var _ = _seq.FromRefNum

//export proxyclash_Client_Log
func proxyclash_Client_Log(refnum C.int32_t, param_level C.nstring, param_message C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(clash.Client)
	_param_level := decodeString(param_level)
	_param_message := decodeString(param_message)
	v.Log(_param_level, _param_message)
}

//export proxyclash_Client_Traffic
func proxyclash_Client_Traffic(refnum C.int32_t, param_up C.int64_t, param_down C.int64_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(clash.Client)
	_param_up := int64(param_up)
	_param_down := int64(param_down)
	v.Traffic(_param_up, _param_down)
}

type proxyclash_Client _seq.Ref

func (p *proxyclash_Client) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxyclash_Client) Log(param_level string, param_message string) {
	_param_level := encodeString(param_level)
	_param_message := encodeString(param_message)
	C.cproxyclash_Client_Log(C.int32_t(p.Bind_proxy_refnum__()), _param_level, _param_message)
}

func (p *proxyclash_Client) Traffic(param_up int64, param_down int64) {
	_param_up := C.int64_t(param_up)
	_param_down := C.int64_t(param_down)
	C.cproxyclash_Client_Traffic(C.int32_t(p.Bind_proxy_refnum__()), _param_up, _param_down)
}

//export proxyclash__GetConfigGeneral
func proxyclash__GetConfigGeneral() C.nbyteslice {
	res_0 := clash.GetConfigGeneral()
	_res_0 := fromSlice(res_0, true)
	return _res_0
}

//export proxyclash__PatchSelector
func proxyclash__PatchSelector(param_data C.nbyteslice) C.char {
	_param_data := toSlice(param_data, false)
	res_0 := clash.PatchSelector(_param_data)
	var _res_0 C.char = 0
	if res_0 {
		_res_0 = 1
	}
	return _res_0
}

//export proxyclash__Setup
func proxyclash__Setup(param_homeDir C.nstring, param_config C.nstring, param_c C.int32_t) {
	_param_homeDir := decodeString(param_homeDir)
	_param_config := decodeString(param_config)
	var _param_c clash.Client
	_param_c_ref := _seq.FromRefNum(int32(param_c))
	if _param_c_ref != nil {
		if param_c < 0 { // go object
			_param_c = _param_c_ref.Get().(clash.Client)
		} else { // foreign object
			_param_c = (*proxyclash_Client)(_param_c_ref)
		}
	}
	clash.Setup(_param_homeDir, _param_config, _param_c)
}
